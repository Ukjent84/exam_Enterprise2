<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.travelagency.online</groupId>
    <artifactId>travelagency</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>root of travelagency</name>

    <modules>
        <module>user-service</module>
        <module>flight-service</module>
        <module>hotelbooking-service</module>
        <module>rest-exception</module>
        <module>location-service</module>
    </modules>

    <properties>
        <!-- General project stuff-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <version.java>1.8</version.java>
        <version.kotlin>1.2.41</version.kotlin>


        <!-- Springboot -->
        <version.springboot>2.0.3.RELEASE</version.springboot>
        <version.springfox>2.9.2</version.springfox>
        <version.resteasy>3.1.3.Final</version.resteasy>
        <version.springcloud>Finchley.RELEASE</version.springcloud>
        <!-- Maven-->
        <version.maven-failsafe-plugin>2.19.1</version.maven-failsafe-plugin>
        <version.maven-surefire-plugin>2.19.1</version.maven-surefire-plugin>
        <version.maven-compiler-plugin>3.6.1</version.maven-compiler-plugin>
        <!-- Database -->
        <version.postgres>42.2.5</version.postgres>
        <version.h2>1.4.194</version.h2>
        <version.flyway>5.2.4</version.flyway>
        <!-- JS libraries -->
        <version.webjars-locator>0.32-1</version.webjars-locator>
        <version.sockjs-client>1.1.2</version.sockjs-client>
        <version.stomp-websocket>2.3.3-1</version.stomp-websocket>
        <version.jquery>3.2.1</version.jquery>
        <!-- Misc -->
        <version.hystrix-core>1.5.12</version.hystrix-core>
        <version.jackson>2.9.7</version.jackson>
        <!--<version.testcontainers>1.6.0</version.testcontainers>-->
        <version.testcontainers>1.9.1</version.testcontainers>
    </properties>

    <dependencies>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!-- Kotlin dependencies -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${version.kotlin}</version>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${version.kotlin}</version>
            </dependency>


            <!-- SpringBoot and Cloud BOMs -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${version.springboot}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${version.springcloud}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- SpringFox for Swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${version.springfox}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${version.springfox}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-spring-web</artifactId>
                <version>${version.springfox}</version>
            </dependency>

            <!-- Misc -->
            <!--<dependency>-->
            <!--<groupId>com.netflix.hystrix</groupId>-->
            <!--<artifactId>hystrix-core</artifactId>-->
            <!--<version>${version.hystrix-core}</version>-->
            <!--</dependency>-->

            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${version.jackson}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-kotlin</artifactId>
                <version>${version.jackson}</version>
            </dependency>

            <!-- Database -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgres}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${version.flyway}</version>
            </dependency>

            <!-- Imports of JS libraries -->
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>webjars-locator</artifactId>
                <version>${version.webjars-locator}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>sockjs-client</artifactId>
                <version>${version.sockjs-client}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>stomp-websocket</artifactId>
                <version>${version.stomp-websocket}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>${version.jquery}</version>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>

            <plugin>
                <!-- see https://kotlinlang.org/docs/reference/using-maven.html -->
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${version.kotlin}</version>
                <!--
                    Kotlin has a major "limitation" that all classes are final by default.
                    Someone call it a "feature", others (like me) call it a "design flaw".
                    See more at: https://discuss.kotlinlang.org/t/classes-final-by-default/166/77

                    Why is it a problem? for example, it does not play well with all major frameworks
                    out there like JPA, Spring, mocking, etc, as they require to create proxy
                    classes that extend the classes you write.
                    So here we have to use special plugins to bypass this Kotlin "feature"...
                -->
                <configuration>
                    <jvmTarget>${version.java}</jvmTarget>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <plugin>jpa</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${version.kotlin}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${version.kotlin}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven-compiler-plugin}</version>
                <executions>
                    <!-- Replacing default-compile as it is treated specially by maven -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                    </execution>
                    <!-- Replacing default-testCompile as it is treated specially by maven -->
                    <execution>
                        <id>default-testCompile</id>
                        <phase>none</phase>
                    </execution>
                    <execution>
                        <id>java-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>

                <!-- Built-in plugin used to compile Java code -->

                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven-compiler-plugin}</version>
                <inherited>true</inherited>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                </configuration>
            </plugin>

            <!-- Built-in plugin used to execute unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven-surefire-plugin}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <rerunFailingTestsCount>3</rerunFailingTestsCount>
                    <argLine>-Xms1024m -Xmx2048m</argLine>
                </configuration>
            </plugin>

            <!-- this is needed to run integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven-failsafe-plugin}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <rerunFailingTestsCount>3</rerunFailingTestsCount>
                    <argLine>-Xms1024m -Xmx4096m</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <pluginManagement>
            <plugins>
                <!-- Build a jar containing all packages -->
                <!-- Call it in child pom with needed configuration-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${version.springboot}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

</project>